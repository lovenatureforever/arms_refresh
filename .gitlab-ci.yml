# Define the image to use for the CI environment
image: php:8.3

# Define cache settings
cache:
  paths:
    - vendor/
    - node_modules/
  key: ${CI_COMMIT_REF_SLUG}

# Define stages
stages:
  - deploy

# Deploy stage: Deploy to production server
deploy_staging:
  stage: deploy
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -t rsa 152.42.247.73 > ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Deploying to staging server..."
    - apt-get update
    - apt-get install -y ssh
    # - eval "$(ssh-agent -s)"
    # - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    # - mkdir -p ~/.ssh
    # - ssh-keyscan -H staging.arms-app.site >> ~/.ssh/known_hosts
    - ssh root@152.42.247.73 << 'EOF'
    - cd /var/www/staging.arms-app.site
    - git pull --rebase
    - composer install --no-dev --optimize-autoloader
    - php artisan migrate --force
    - php artisan tenants:migrate
    - php artisan config:cache
    - php artisan route:cache
    - php artisan view:cache
    - echo "Deployment complete!"
    - EOF
  environment:
    name: staging
    url: https://staging.arms-app.site
  only:
    - staging
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
